<UserControl x:Class="Cryptor.MonitoringPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:utils="clr-namespace:Cryptor.Utilities"
             xmlns:converters="clr-namespace:Cryptor.Converters"
             mc:Ignorable="d" 
             Height="Auto"
             Margin="0,2"
             Name="MainUserControl"
             Background="{StaticResource mainControlBackground}">
    <UserControl.Resources>
        <sys:Boolean x:Key="TrueValue">True</sys:Boolean>
        <converters:LastUpdatedDateConverter x:Key="lastUpdatedDateConverter" />
        <converters:NumericToStringConverterMultiValue x:Key="numericToStringConverter" />
        <converters:NumericToStringConverterSingleValue x:Key="numericToStringConverterSingle" />
        <Style x:Key="TextStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="10"/>
        </Style>
        <Style x:Key="AnimatedTextStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding>
                            <MultiBinding.Converter>
                                <converters:ValueChangedColorConverter/>
                            </MultiBinding.Converter>
                            <Binding Path="Price" />
                            <Binding Path="PreviousPrice" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                    To="#00FF00"
                                    Duration="0:0:3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Value="False">
                    <DataTrigger.Binding>
                        <MultiBinding>
                            <MultiBinding.Converter>
                                <converters:ValueChangedColorConverter/>
                            </MultiBinding.Converter>
                            <Binding Path="Price" />
                            <Binding Path="PreviousPrice" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="#FF0000"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <UserControl.Style>
        <Style>
            <Style.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" />
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="20,20" To="0,2" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <Border BorderBrush="#000000" BorderThickness="1" VerticalAlignment="Top">
        <StackPanel>
            <Border Background="{StaticResource itemBackgroundSelected}"
                        BorderBrush="#000000">
                <DockPanel>
                    <TextBlock Text="{Binding Name}"
                        Margin="5,0"
                        FontSize="14"/>
                    <Button HorizontalAlignment="Right"
                        Height="17"
                        Width="17"
                        Command="{Binding Path=DataContext.StopMonitoring,
                                    RelativeSource={RelativeSource Mode=FindAncestor,
                                    AncestorType=ListBox}}"
                        CommandParameter="{Binding Path=DataContext,
                                    RelativeSource={RelativeSource Self}}">
                        <Image>
                            <Image.Source>
                                <BitmapImage DecodePixelWidth="300" UriSource="/Images/close.png" />
                            </Image.Source>
                        </Image>
                    </Button>
                </DockPanel>
            </Border>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="7*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0"
                           Grid.Column="0"
                           Text="{Binding Symbol}"
                           Style="{StaticResource TextStyle}"
                           TextAlignment="Center"
                           FontSize="14"
                           FontWeight="Bold"
                           Width="12"
                           TextWrapping="Wrap"/>
                <Grid Height="70"
                      Grid.Row="1"
                      Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Name="GridWidthReferenceColumn" Width="5*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="5*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Row="0"
                            Grid.Column="0"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="3"
                            CanUserReorderColumns="False"
                            CanUserResizeColumns="False" 
                            CanUserResizeRows="False"
                            CanUserSortColumns="False"
                            AutoGenerateColumns="False"
                            HeadersVisibility="None"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                            GridLinesVisibility="None"
                            BorderThickness="0"
                            Margin="0,2"
                            SelectionUnit="Cell"
                            ItemsSource="{Binding CurrencyAlertDataList}">
                        <DataGrid.Resources>
                            <Style x:Key="TextBoxStyle" TargetType="TextBox">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="10"/>
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Setter Property="Background" Value="Red"/>
                                        <Setter Property="ToolTip" 
                                            Value="{Binding RelativeSource={RelativeSource Self},
                                            Path=(Validation.Errors)[0].ErrorContent}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="True">
                                                <Condition.Binding>
                                                    <MultiBinding>
                                                        <MultiBinding.Converter>
                                                            <converters:AlertCheckConverter/>
                                                        </MultiBinding.Converter>
                                                        <Binding Path="LowerBound" />
                                                        <Binding Path="Price" />
                                                        <Binding Path="UpperBound" />
                                                        <Binding />
                                                    </MultiBinding>
                                                </Condition.Binding>
                                            </Condition>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.EnterActions>
                                            <BeginStoryboard Name="alert">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                     From="1" To="0"
                                                                     AutoReverse="True"
                                                                     Duration="0:0:0.5"
                                                                     RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.EnterActions>
                                        <MultiDataTrigger.ExitActions>
                                            <StopStoryboard BeginStoryboardName="alert"/>
                                        </MultiDataTrigger.ExitActions>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGrid}">
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Setters>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="Width" Value="{Binding ElementName=GridWidthReferenceColumn,
                                        Path=ActualWidth}"/>
                                </Style.Setters>
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Setter Property="Background" Value="Red"/>
                                        <Setter Property="ToolTip" 
                                            Value="{Binding RelativeSource={RelativeSource Self},
                                            Path=(Validation.Errors)[0].ErrorContent}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="#000000" />
                                        <Setter Property="Background" Value="{x:Null}" />
                                        <Setter Property="BorderBrush" Value="{x:Null}" />
                                    </Trigger>
                                    <Trigger Property="IsReadOnly" Value="False">
                                        <Setter Property="Foreground" Value="#FFFFFF" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn ElementStyle="{StaticResource TextStyle}"
                                EditingElementStyle="{StaticResource TextBoxStyle}">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="LowerBound"
                                        Converter="{StaticResource numericToStringConverterSingle}"
                                        ConverterParameter="XXX"
                                        ValidatesOnExceptions="True"
                                        UpdateSourceTrigger="Explicit"
                                        Mode="TwoWay">
                                        <Binding.ValidationRules>
                                            <utils:AlertValidationRule ValidationStep="UpdatedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn ElementStyle="{StaticResource AnimatedTextStyle}"
                                                EditingElementStyle="{StaticResource TextBoxStyle}"
                                                IsReadOnly="True">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource numericToStringConverter}"
                                                  ConverterParameter='Price'
                                                  NotifyOnSourceUpdated="True">
                                        <Binding Path="Price" />
                                        <Binding Path="PairedCurrency" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn ElementStyle="{StaticResource TextStyle}"
                                EditingElementStyle="{StaticResource TextBoxStyle}">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="UpperBound"
                                        Converter="{StaticResource numericToStringConverterSingle}"
                                        ConverterParameter="XXX"
                                        ValidatesOnExceptions="True"
                                        UpdateSourceTrigger="Explicit"
                                        Mode="TwoWay">
                                        <Binding.ValidationRules>
                                            <utils:AlertValidationRule ValidationStep="UpdatedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!--Percent Changes-->
                    <TextBlock Text="{Binding PercentChange1Hour,
                                    StringFormat='\{0\}%'}"
                               Style="{StaticResource TextStyle}"
                               VerticalAlignment="Bottom"
                               Grid.Row="2"
                               Grid.Column="0"/>
                    <TextBlock Text="{Binding PercentChange24Hours,
                                    StringFormat='\{0\}%'}"
                               Style="{StaticResource TextStyle}"
                               VerticalAlignment="Bottom"
                               Grid.Row="2"
                               Grid.Column="1"/>
                    <TextBlock Text="{Binding PercentChange7days,
                                    StringFormat='\{0\}%'}"
                               Style="{StaticResource TextStyle}"
                               VerticalAlignment="Bottom"
                               Grid.Row="2"
                               Grid.Column="2"/>
                    <!--Last Updated-->
                    <TextBlock Text="{Binding LastUpdated,
                                    StringFormat='Last Updated: {0}',
                                    Converter={StaticResource lastUpdatedDateConverter}}"
                               Style="{StaticResource TextStyle}"
                               HorizontalAlignment="Right"
                               Grid.Row="3"
                               Grid.Column="0"
                               Grid.ColumnSpan="3"
                               Margin="5,0"
                               FontStyle="Italic"/>
                </Grid>
            </Grid>
        </StackPanel>
    </Border>
</UserControl>
