<Window x:Class="Cryptor.Monitor"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Cryptor"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:viewmodel="clr-namespace:Cryptor.ViewModel"
        xmlns:converters="clr-namespace:Cryptor.Converters"
        mc:Ignorable="d"
        Name="Cryptor"
        Title="Cryptor" Height="350" Width="250"
        MaxWidth="270" MinWidth="270"
        SizeToContent="Height"
        Background="{StaticResource mainControlBackground}">
    <Window.Resources>
        <viewmodel:CryptorVM x:Key="cryptorVm"/>
        <converters:IntToVisibilityConverter x:Key="intToVisibilityConverter" />
        <converters:CheckLimitConverter x:Key="checkLimitConverter" />
        <converters:WindowMinHeightConverter x:Key="windowMinHeightConverter"/>
        <sys:Int32 x:Key="MonitoringLimit">5</sys:Int32>
        <Style TargetType="{x:Type ListView}">
            <Style.Resources>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="MinWidth" Value="12" />
                    <Setter Property="Width" Value="12" />
                    <Setter Property="Background" Value="#003319"/>
                </Style>
            </Style.Resources>
        </Style>
    </Window.Resources>
    <Window.MinHeight>
        <MultiBinding Converter="{StaticResource windowMinHeightConverter}">
            <Binding ElementName="CurrencyMainGrid" Path="ActualHeight" />
            <Binding ElementName="MonitoredListBox" Path="ActualHeight" />
        </MultiBinding>
    </Window.MinHeight>
    <Window.DataContext>
        <viewmodel:CryptorVM />
    </Window.DataContext>
    <StackPanel Name="MainPanel">
        <Grid Name="CurrencyMainGrid"
            Margin="0,0,0,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBox Name="SearchTextBox"
                     Grid.Row="0"
                     Margin="5,10"
                     CharacterCasing="Upper"
                     BorderBrush="#000000"
                     Text="{Binding Path=SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding Path=SearchTextBoxTextChanged}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <ListView Name="CurrencyListView"
                      Grid.Row="1"
                      ItemsSource="{Binding Currencies}"
                      Width="240"
                      Height="100"
                      Margin="5,0"
                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      Background="{StaticResource mainControlBackground}">
                    <ListView.Resources>
                        <ContextMenu x:Key="CurrencyContextMenu">
                            <ContextMenu.Resources>
                                <converters:BooleanToMonitorStateConverter x:Key="booleanToMonitorStateConverter" />
                            </ContextMenu.Resources>
                            <ContextMenu.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}" >
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=DataContext.MonitoredCurrenciesCount,
                                                    RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=ListView},
                                                    Converter={StaticResource checkLimitConverter},
                                                    ConverterParameter={StaticResource MonitoringLimit}}"
                                                Value="True"/>
                                                <Condition Binding="{Binding Path=PlacementTarget.DataContext.IsMonitored,
                                                    RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=ContextMenu}}"
                                                 Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContextMenu.ItemContainerStyle>
                            <MenuItem Header="{Binding Path=PlacementTarget.DataContext.IsMonitored,
                                    RelativeSource={RelativeSource Mode=FindAncestor,
                                        AncestorType=ContextMenu},
                                        Converter={StaticResource booleanToMonitorStateConverter}}"
                                    Command="{Binding Path=DataContext.AddMonitoredCurrency,
                                        RelativeSource={RelativeSource Mode=FindAncestor,
                                        AncestorType=ListView}}"
                                    CommandParameter="{Binding Path=PlacementTarget.DataContext,
                                        RelativeSource={RelativeSource Mode=FindAncestor,
                                        AncestorType=ContextMenu}}"/>
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" >
                            <Setter Property="Foreground" Value="#000000"/>
                            <Setter Property="ContextMenu" Value="{StaticResource CurrencyContextMenu}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border Margin="2,1"
                                        Background="{TemplateBinding Background}">
                                            <GridViewRowPresenter Content="{TemplateBinding Content}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsMonitored}" Value="True">
                                                <Setter Property="Background" Value="{StaticResource itemBackgroundSelected}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsMonitored}" Value="False">
                                                <Setter Property="Background" Value="{StaticResource itemBackgroundUnselected}" />
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="Background" Value="#003319"/>
                                    <Setter Property="IsEnabled"
                                        Value="False"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled"
                                             Value="False">
                                            <Setter Property="TextElement.Foreground"
                                                Value="#FFFFFF"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn Header="Coin"
                                        Width="90"
                                        DisplayMemberBinding="{Binding Name}" />
                            <GridViewColumn Header="USD"
                                        Width="55"
                                        DisplayMemberBinding="{Binding PriceUsd}" />
                            <GridViewColumn Header="BTC"
                                        Width="75"
                                        DisplayMemberBinding="{Binding PriceBtc}" />
                        </GridView>
                    </ListView.View>
                </ListView>
        </Grid>
        <ListBox Name="MonitoredListBox"
                 ItemsSource="{Binding MonitoredCurrencies}" 
                 Width="{Binding ElementName=CurrencyListView,
                        Path=Width}"
                        BorderThickness="0"
                        Background="Transparent"
                        Visibility="{Binding MonitoredCurrenciesCount,
                            Converter={StaticResource intToVisibilityConverter}}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <local:MonitoringPanel/>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </StackPanel>
</Window>
